This Project is done by Team log4j
The members are 
1) Abhishek Sahu - 21111002
2) Tanikella Sai Kiran - 21111061
3) Ashutosh More - 21111017
4) Shivam Kharwar - 21111058
5) Maj Ashish Ahluwalia - 21111073
6) Binaya Kumar Suna - 21111021


This project contains the following directories
1) code - Place where our codes for the project are kept
2) meter - A module to extract features from PCAPS
3) output - Where our output of our project is stored
4) pcaps - Where we have store the PCAPS captured for training
5) processed_data - Where we kept our processed file which can be use for training
6) raw_data - A place where we keep our generated csv in raw form
7) systems - A place where we have stored the trained models
8) testing - A place where you can check whether pcaps files are malicious or not
9) zips - A place where we keep our zips which contains pcap files

To understand the whole project sequence, we will go in chronological order 

Step 1: EXTRACTING ZIPS
In folder zips, we have place a shell file which will extract all zips and save in pcaps folder
To run it
>> cd zips
>> sh extract-zip

Step 2: GENERATING FEATURES
Now next important thing is to generate meaningful data from pcap files. To do so, we should use pcaps files generated from last step.
So to extract feature we need to go to raw_data folder. There we will find a script file which will take all pcaps files and extract features and stored in csv folder in raw_data
To run it
>> cd raw_data
>> sh generate-feature.sh

Step 3: Generating Process Data
From the generated csv from pcaps in Step 2, now we need to merge all the data and label it according to our need. So we have processed them and store the files in processed_data folder.

Step 4: Training Our Model
After generating the required data, next step is to run the training algorithms for the classifiers for L1 and L2 level. For that we have two directory in our code folder. 
To train level 1, we have to use the following codes
>> cd code
>> cd 1_classification
>> sh run-classification.sh

To train level 2, we have to use the following codes
>> cd code
>> cd 2_characterization
>> sh run-charavterization.sh

And after training, we have store those models in systems directories. So that we can use them later.
Also, we have stored the output of the models in output directory.

Step 5: Testing on Pcaps
So now our final step. Given any pcap files, we have identify whether it is malicious or not. 
To do this, we have created testing folder. 
Inside it, we have a folder named pcaps. Where we have to place all pcaps files that we need to test.
After placing them, we need to run the script to test it.
To test the pcaps we need
>> cd testing
>> sh checkMaliciousPcap.sh

And this will test the pcaps, and store the output of our testing in output directory.

This is whole project structure.
Also we have provided the requirements file which helps to fill the dependencies
To install them 
>> pip install -r requirements.txt

